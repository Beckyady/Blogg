{"ast":null,"code":"var _jsxFileName = \"/home/becky/Documents/Official Files/Blog/blogCli/src/components/CreatePost/CreatePost.js\";\nimport React from 'react';\nimport '../../assets/Styles/Styles.css';\nimport FormValidator from '../Validator/FormValidator';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport env from \"../../env\";\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBBtn, MDBContainer, MDBIcon } from \"mdbreact\";\nimport { is } from '@babel/types';\nexport default class CreateBlog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = async event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state);\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        try {\n          const token = localStorage.getItem('token');\n          const headers = {\n            'auth-token': token\n          };\n          const _this$state = this.state,\n                title = _this$state.title,\n                body = _this$state.body,\n                image_url = _this$state.image_url;\n          const postData = {\n            title,\n            body,\n            image_url\n          };\n          console.log(postData);\n          const res = await axios.post(\"\".concat(env.api, \"/posts\"), postData, {\n            headers: headers\n          });\n          toastr.options.positionClass = \"toast-top-center\";\n\n          if (res) {\n            setTimeout(() => toastr.success('New Post Successfully Created'), 2000);\n          }\n\n          this.props.history.push('/create-post');\n          this.setState;\n        } catch (err) {\n          toastr.error('An Error Occured, try again or Add an image');\n        }\n      } else {\n        toastr.options.positionClass = \"toast-top-center\";\n        toastr.warning('Cannot Create Post Make sure all fields are correctly filled');\n      }\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handlePostSubmit = this.handleFormSubmit.bind(this);\n    this.validator = new FormValidator([{\n      field: 'title',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Title is required'\n    }, {\n      field: 'body',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Content is required'\n    }]);\n    this.state = {\n      title: '',\n      body: '',\n      author: '',\n      image_url: '',\n      likes: '',\n      validation: this.validator.valid(),\n      successmessage: '',\n      errormessage: ''\n    };\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  uploadWidget(event) {\n    const $this = this;\n    event.preventDefault();\n    window.cloudinary.openUploadWidget({\n      cloud_name: 'dxxm4ehaw',\n      upload_preset: 'ruvxhuuh',\n      tags: ['xmas']\n    }, (error, result) => {\n      console.log(result[0]);\n      $this.setState({\n        image_url: result[0].url\n      });\n    });\n  }\n\n  render() {\n    let validation = this.submitted ? // if the form has been submitted at least once\n    this.validator.validate(this.state) : // then check validity every time we render\n    this.state.validation;\n    return React.createElement(MDBContainer, {\n      className: \"backgroundCP\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 text-center py-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Create Post\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"amber\",\n      onClick: this.uploadWidget.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Click here to add image\")), React.createElement(\"div\", {\n      className: \"{validation.title.isInvalid && 'has-error'}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"grey-text font-weight-light mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Enter Your Title\"), React.createElement(\"input\", {\n      name: \"title\",\n      className: \"form-control\",\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, validation.title.message)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"{validation.body.isInvalid && 'has-error'}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"content\",\n      className: \"grey-text font-weight-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Type your Content\"), React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      id: \"basic-addon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-pencil-alt prefix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(\"textarea\", {\n      name: \"body\",\n      className: \"form-control\",\n      rows: \"25\",\n      onChange: this.handleInputChange,\n      value: this.state.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, validation.body.message)), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      className: \"btn btn-outline-purple\",\n      type: \"submit\",\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Post\", React.createElement(MDBIcon, {\n      far: true,\n      icon: \"paper-plane\",\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      outline: true,\n      color: \"danger\",\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \" Cancel Post\", React.createElement(MDBIcon, {\n      far: true,\n      icon: \"paper-plane\",\n      className: \"ml-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })))))))))) // <div className='container createpostcontainer'>\n    //     <h2 className=\"err-success text-center\">{this.state.errormessage}</h2>\n    //     <h2 className=\"err-success text-center\">{this.state.successmessage}</h2>\n    //     <div className='row createpostbody'>\n    //         <form>\n    //             <div className=' form-group uploadimg' >\n    //                 <button onClick={this.uploadWidget.bind(this)} className=\"upload-button btn btn-dark\">\n    //                    Click here to add image\n    //         </button>\n    //             </div>\n    //             <div className='form-group title'>\n    //                 <input className='titletext' name='title'\n    //                     placeholder='Enter your Title' value={this.state.title}\n    //                     onChange={this.handleInputChange} />\n    //                 <span className=\"help-block\">{validation.title.message}</span>\n    //             </div>\n    //             <div className='form-group body'>\n    //                 <textarea className='bodytext' name='body'\n    //                     onChange={this.handleInputChange} value={this.state.body} placeholder='Create your Story' >\n    //                 </textarea>\n    //                 <span className=\"help-block\">{validation.body.message}</span>\n    //             </div>\n    //             <div className='form-group uploadbtn'>\n    //                 <button type=\"submit\" onClick={this.handleFormSubmit}\n    //                     className=\"btn btn-success\">Create</button>\n    //                     <a class=\"btn btn-danger cancelbtn\" href=\"/\" role=\"button\">Cancel</a>\n    //             </div>\n    //         </form>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["/home/becky/Documents/Official Files/Blog/blogCli/src/components/CreatePost/CreatePost.js"],"names":["React","FormValidator","axios","toastr","env","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBBtn","MDBContainer","MDBIcon","is","CreateBlog","Component","constructor","props","handleFormSubmit","event","preventDefault","validation","validator","validate","state","setState","submitted","isValid","token","localStorage","getItem","headers","title","body","image_url","postData","console","log","res","post","api","options","positionClass","setTimeout","success","history","push","err","error","warning","handleInputChange","bind","handlePostSubmit","field","method","validWhen","message","author","likes","valid","successmessage","errormessage","target","name","value","uploadWidget","$this","window","cloudinary","openUploadWidget","cloud_name","upload_preset","tags","result","url","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../assets/Styles/Styles.css';\nimport FormValidator from '../Validator/FormValidator';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport env from \"../../env\";\nimport { MDBRow, MDBCol, MDBCard, MDBCardBody, MDBBtn, MDBContainer, MDBIcon } from \"mdbreact\";\nimport { is } from '@babel/types';\n\n\nexport default class CreateBlog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handlePostSubmit = this.handleFormSubmit.bind(this);\n\n\n        this.validator = new FormValidator([\n\n            {\n                field: 'title',\n                method: 'isEmpty',\n                validWhen: false,\n                message: 'Title is required'\n            },\n            {\n                field: 'body',\n                method: 'isEmpty',\n                validWhen: false,\n                message: 'Content is required'\n            },\n\n        ]);\n\n        this.state = {\n            title: '',\n            body: '',\n            author: '',\n            image_url: '',\n            likes: '',\n            validation: this.validator.valid(),\n            successmessage: '',\n            errormessage: '',\n        }\n    }\n\n    handleInputChange(event) {\n        event.preventDefault();\n        this.setState({ [event.target.name]: event.target.value })\n\n    }\n\n\n    handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const validation = this.validator.validate(this.state);\n        this.setState({ validation });\n        this.submitted = true;\n\n        if (validation.isValid) {\n            try {\n                const token = localStorage.getItem('token');\n                const headers = {\n                    'auth-token': token\n                };\n                const { title, body, image_url } = this.state;\n                const postData = {\n                    title,\n                    body,\n                    image_url\n                };\n                console.log(postData)\n                const res = await axios.post(`${env.api}/posts`, postData, { headers: headers });\n                toastr.options.positionClass = \"toast-top-center\";\n\n                if (res) {\n                    setTimeout(() =>\n\n                        toastr.success('New Post Successfully Created'), 2000)\n                }\n                this.props.history.push('/create-post');\n                this.setState\n                \n\n            } catch (err) {\n                toastr.error('An Error Occured, try again or Add an image')\n\n            }\n\n        } else {\n            toastr.options.positionClass = \"toast-top-center\"\n\n            toastr.warning('Cannot Create Post Make sure all fields are correctly filled')\n\n        }\n    }\n\n    uploadWidget(event) {\n        const $this = this;\n        event.preventDefault();\n        window.cloudinary.openUploadWidget({ cloud_name: 'dxxm4ehaw', upload_preset: 'ruvxhuuh', tags: ['xmas'] },\n            (error, result) => {\n                console.log(result[0]);\n                $this.setState({ image_url: result[0].url });\n            });\n    }\n    render() {\n\n        let validation = this.submitted ?           // if the form has been submitted at least once\n            this.validator.validate(this.state) :   // then check validity every time we render\n            this.state.validation\n        return (\n            <MDBContainer className=\"backgroundCP\" fluid>\n\n                <MDBContainer >\n                    <MDBRow>\n                        <MDBCol md=\"12\">\n                            <MDBCard>\n                                <MDBCardBody>\n                                    <form>\n                                        <p className=\"h4 text-center py-4\">Create Post</p>\n\n                                        <div >\n                                            <MDBBtn color=\"amber\" onClick={this.uploadWidget.bind(this)}> Click here to add image</MDBBtn>\n\n                                        </div>\n\n                                        <div className=\"{validation.title.isInvalid && 'has-error'}\">\n                                            <label htmlFor=\"title\" className=\"grey-text font-weight-light mt-4\" >\n                                                Enter Your Title\n                                            </label>\n                                            <input name=\"title\" className=\"form-control\" value={this.state.title} onChange={this.handleInputChange} />\n                                            <span className=\"help-block\">{validation.title.message}</span>\n                                        </div>\n                                        <br />\n\n                                        <div className=\"{validation.body.isInvalid && 'has-error'}\">\n                                            <label htmlFor=\"content\" className=\"grey-text font-weight-light\">\n                                                Type your Content\n                                         </label>\n                                            <div className=\"input-group\">\n                                                <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\" id=\"basic-addon\">\n                                                        <i className=\"fas fa-pencil-alt prefix\"></i>\n                                                    </span>\n                                                </div>\n                                                <textarea  name='body' className=\"form-control\" rows=\"25\" onChange={this.handleInputChange} value={this.state.body}/>\n                                            </div>\n                                            <span className=\"help-block\">{validation.body.message}</span>\n\n                                        </div>\n\n                                        <div className=\"text-center py-4 mt-3\">\n                                            <MDBBtn className=\"btn btn-outline-purple\" type=\"submit\" onClick={this.handleFormSubmit}>\n                                                Post\n                                                <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n                                            </MDBBtn>\n                                        </div>\n                                        <div className=\"text-center py-4 mt-3\">\n                                            <MDBBtn outline color=\"danger\" href=\"/login\"> Cancel Post\n                                        <MDBIcon far icon=\"paper-plane\" className=\"ml-2\" />\n\n                                            </MDBBtn>\n\n                                        </div>\n                                    </form>\n                                </MDBCardBody>\n\n                            </MDBCard>\n                        </MDBCol>\n                    </MDBRow>\n                </MDBContainer>\n\n            </MDBContainer>\n            // <div className='container createpostcontainer'>\n            //     <h2 className=\"err-success text-center\">{this.state.errormessage}</h2>\n            //     <h2 className=\"err-success text-center\">{this.state.successmessage}</h2>\n            //     <div className='row createpostbody'>\n            //         <form>\n            //             <div className=' form-group uploadimg' >\n            //                 <button onClick={this.uploadWidget.bind(this)} className=\"upload-button btn btn-dark\">\n            //                    Click here to add image\n            //         </button>\n\n            //             </div>\n\n            //             <div className='form-group title'>\n            //                 <input className='titletext' name='title'\n            //                     placeholder='Enter your Title' value={this.state.title}\n            //                     onChange={this.handleInputChange} />\n\n            //                 <span className=\"help-block\">{validation.title.message}</span>\n\n            //             </div>\n\n            //             <div className='form-group body'>\n            //                 <textarea className='bodytext' name='body'\n            //                     onChange={this.handleInputChange} value={this.state.body} placeholder='Create your Story' >\n\n            //                 </textarea>\n            //                 <span className=\"help-block\">{validation.body.message}</span>\n\n            //             </div>\n\n            //             <div className='form-group uploadbtn'>\n            //                 <button type=\"submit\" onClick={this.handleFormSubmit}\n            //                     className=\"btn btn-success\">Create</button>\n\n            //                     <a class=\"btn btn-danger cancelbtn\" href=\"/\" role=\"button\">Cancel</a>\n            //             </div>\n            //         </form>\n\n            //     </div>\n\n            // </div>\n        )\n    }\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}