{"ast":null,"code":"var _jsxFileName = \"/home/becky/Documents/Official Files/Blog/blogCli/src/components/Accounts/Signup.js\";\nimport React from 'react';\nimport '../../assets/Styles/Styles.css';\nimport FormValidator from '../Validator/FormValidator';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport env from \"../../env\";\nimport bloglogo from '../../assets/Images/bloglogo.png';\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const validation = this.validator.validate(this.state);\n      this.setState({\n        validation\n      });\n      this.submitted = true;\n\n      if (validation.isValid) {\n        //handle actual form submission here\n        try {\n          const res = await axios.post(\"\".concat(env.api, \"/users\"), this.state);\n          console.log;\n          const token = res.data.data.token;\n          localStorage.setItem('token', token);\n          this.props.history.push('/create-post');\n        } catch (err) {\n          console.log(err);\n          toastr.error(err.response);\n          console.log('An Error Occured', err.response);\n        }\n      } else {\n        toastr.options.positionClass = \"toast-top-center\";\n        toastr.warning('Cannot Create User Make sure all fields are correctly filled');\n      }\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.validator = new FormValidator([{\n      field: 'username',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Username is required'\n    }, {\n      field: 'username',\n      method: 'matches',\n      args: [/^[a-z0-9A-Z\\s]*$/],\n      validWhen: true,\n      message: 'Username can only contain letters and numbers'\n    }, {\n      field: 'password',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Password is required'\n    }]);\n    this.state = {\n      username: '',\n      password: '',\n      validation: this.validator.valid(),\n      successmessage: '',\n      errormessage: ''\n    };\n    this.submitted = false;\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    if (token) return this.props.history.push('/signup');\n  }\n\n  render() {\n    let validation = this.submitted ? // if the form has been submitted at least once\n    this.validator.validate(this.state) : // then check validity every time we render\n    this.state.validation;\n    return React.createElement(\"div\", {\n      className: \"container-fluid logincontain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"navbar-brand\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: bloglogo,\n      className: \"bloglogo\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"navbar-toggler\",\n      type: \"button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#navbarNavAltMarkup\",\n      \"aria-controls\": \"navbarNavAltMarkup\",\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-toggler-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"collapse navbar-collapse alignnav\",\n      id: \"navbarNavAltMarkup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navbar-nav \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Home\")))), React.createElement(\"a\", {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Cancel\"))))), React.createElement(\"div\", {\n      className: \"bgoverlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"h2\", {\n      className: \"err-success text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.errormessage), React.createElement(\"h2\", {\n      className: \"err-success text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.successmessage), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group {validation.username.isInvalid && 'has-error'}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"username\",\n      placeholder: \"Username\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, validation.username.message)), React.createElement(\"div\", {\n      className: \"form-group {validation.password.isInvalid && 'has-error'}\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      id: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"help-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, validation.password.message)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"span\", {\n      style: {\n        paddingLeft: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Already have an account?\", React.createElement(\"a\", {\n      className: \"btn btn-link\",\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"LOGIN\")))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/becky/Documents/Official Files/Blog/blogCli/src/components/Accounts/Signup.js"],"names":["React","FormValidator","axios","toastr","env","bloglogo","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","validation","validator","validate","state","setState","submitted","isValid","res","post","api","console","log","token","data","localStorage","setItem","history","push","err","error","response","options","positionClass","warning","handleInputChange","bind","field","method","validWhen","message","args","username","password","valid","successmessage","errormessage","target","name","value","componentDidMount","getItem","render","paddingLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../assets/Styles/Styles.css';\nimport FormValidator from '../Validator/FormValidator';\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport env from \"../../env\";\nimport bloglogo from '../../assets/Images/bloglogo.png';\n\n\nexport default class SignUp extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.validator = new FormValidator([\n\n            {\n                field: 'username',\n                method: 'isEmpty',\n                validWhen: false,\n                message: 'Username is required'\n            },\n            {\n                field: 'username',\n                method: 'matches',\n                args: [/^[a-z0-9A-Z\\s]*$/],\n                validWhen: true,\n                message: 'Username can only contain letters and numbers'\n            },\n            {\n                field: 'password',\n                method: 'isEmpty',\n                validWhen: false,\n                message: 'Password is required'\n            }\n        ])\n\n        this.state = {\n            username:'',\n            password:'',\n            validation: this.validator.valid(),\n            successmessage: '',\n            errormessage: '',\n\n        };\n        this.submitted = false;\n    }\n\n\n    handleInputChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n  \n    handleSubmit = async (event) => {\n        event.preventDefault();\n        const validation = this.validator.validate(this.state);\n        this.setState({ validation });\n        this.submitted = true;\n\n        if (validation.isValid) {\n\n            //handle actual form submission here\n\n            try {\n                const res = await axios.post(`${env.api}/users`, this.state);\n                console.log\n                const token = res.data.data.token;\n\n                localStorage.setItem('token', token);\n\n                this.props.history.push('/create-post');\n            } catch (err) {\n                console.log(err)\n                toastr.error(err.response);\n                console.log('An Error Occured', err.response);\n            }\n\n\n        }\n        else {\n            toastr.options.positionClass = \"toast-top-center\";\n\n            toastr.warning('Cannot Create User Make sure all fields are correctly filled');\n\n        }\n    };\n    componentDidMount() {\n        const token = localStorage.getItem('token');\n\n        if (token) return this.props.history.push('/signup');\n    }\n\n\n    render() {\n        let validation = this.submitted ?            // if the form has been submitted at least once\n            this.validator.validate(this.state) :   // then check validity every time we render\n            this.state.validation;\n        return (\n            <div className='container-fluid logincontain'>\n            <div className='navbar-wrapper'>\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <a className=\"navbar-brand\" href=\"/\"><img src={bloglogo} className='bloglogo' alt='' /></a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse alignnav\" id=\"navbarNavAltMarkup\">\n                            <div className=\"navbar-nav \">\n                                <a href='/'><button type=\"button\" className=\"btn btn-dark\" >Home</button></a>\n                            </div>\n                        </div>\n\n                        <a href='/'><div><button type=\"button\" className=\"btn btn-dark\" >Cancel</button></div></a>\n                    </nav>\n\n                </div>\n             <div className='bgoverlay'>\n                <h3 >Sign Up</h3>\n                <h2 className=\"err-success text-center\">{this.state.errormessage}</h2>\n                <h2 className=\"err-success text-center\">{this.state.successmessage}</h2>\n\n                <div className='row' >\n                    <form >\n                        <div className=\"form-group {validation.username.isInvalid && 'has-error'}\">\n                            <label for=\"username\">Username</label>\n                            <input type=\"text\" className=\"form-control\" id=\"username\"\n                                placeholder=\"Username\" name='username' value={this.state.username}\n                                onChange={this.handleInputChange} />\n                            <span className=\"help-block\">{validation.username.message}</span>\n\n                        </div>\n                        <div className=\"form-group {validation.password.isInvalid && 'has-error'}\">\n                            <label for=\"password\">Password</label>\n                            <input type=\"password\" className=\"form-control\"\n                                id=\"password\" placeholder=\"Password\" name='password' value={this.state.password} onChange={this.handleInputChange} />\n\n                            <span className=\"help-block\">{validation.password.message}</span>\n                        </div>\n\n\n                        <div className=\"form-group\">\n                            <div>\n                                <button type=\"submit\" onClick={this.handleSubmit} className=\"btn btn-success\">Register</button>\n\n                                <span style={{ paddingLeft: 15 }}>Already have an account? \n                                <a className=\"btn btn-link\" href=\"/login\"> <button type=\"button\" className=\"btn btn-dark\" >\n                                LOGIN\n                    </button></a></span> \n                            </div>\n                        </div>\n                    </form>\n\n                </div>\n\n\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}